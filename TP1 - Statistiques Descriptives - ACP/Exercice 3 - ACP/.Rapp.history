setwd("~/Desktop/R/TP1/ACP")
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
quartz()
utilisation_outils_R()
quartz()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
quartz()
utilisation_outils_R()
quartz()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
utilisation_outils_R()
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
library(MASS)
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
install.packages("plotrix")
library(plotrix)
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
require(plotirx)
require(plotrix)
draw.circle(0,0,1)
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
theorique()
source("script.R")
theorique()
source("script.R")
theorique()
source("script.R")
theorique()
source("script.R")
theorique()
source("script.R")
theorique()
source("script.R")
theorique()
source("script.R")
theorique()
source("script.R")
theorique()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
source("script.R")
utilisation_outils_R()
library(MASS)#
	data(crabs)#
	crabsquant = crabs[,4:8]
princomp(crabsquant)$loadings
c = princomps(crabsquant)$loadings
c = princomp(crabsquant)$loadings
c
c
print(c)
c
cor(princomp(crabsquant)$scores,crabsquant)
cor(crabsquant,princomp(crabsquant)$scores)
c
c= princomp(crabsquant)
c
classes(c)
objects(c)
c$sdev
c$sdev^2
sum(c$sdev^2)/c$sdev^2
sum(c$sdev^2)/(c$sdev^2)
sum(c$sdev^2)/(c$sdev^2)
sum(c$sdev)/(c$sdev)
c$sdev^2
sum(c$sdev^2)
cumsum(c$sdev^2)/sum(c$sdev^2)
cumsum(c$sdev^2)/sum(c$sdev^2)*100
(c$sdev^2)/sum(c$sdev^2)*100
source("script.R")
traitement_crabs()
source("script.R")
traitement_crabs()
source("script.R")
traitement_crabs()
source("script.R")
traitement_crabs()
source("script.R")
traitement_crabs()
source("script.R")
traitement_crabs()
source("script.R")
traitement_crabs()
source("script.R")
traitement_crabs()
